class Solution:
    def romanToInt(self, s: str) -> int:
        """
        Конвертирует римское число (строку) в целое число (int).

        Подход:
        Проходим строку с конца (справа налево). Если текущий символ
        меньше предыдущего, вычитаем его из суммы, иначе добавляем.
        Это учитывает случаи вычитания (например, IV = 4).

        :param s: Римское число в виде строки (например, "MCMXCIV")
        :return: Целое число, соответствующее римскому числу (например, 1994)
        """

        # Словарь соответствия римских цифр их числовым значениям
        roman_map = {
            'I': 1,
            'V': 5,
            'X': 10,
            'L': 50,
            'C': 100,
            'D': 500,
            'M': 1000
        }

        total = 0  # Итоговое число
        prev = 0   # Предыдущее значение для сравнения

        # Проходим строку в обратном порядке (справа налево)
        for char in reversed(s):
            curr = roman_map[char]  # Текущая числовая величина
            if curr < prev:
                # Если текущее число меньше предыдущего — вычитаем
                total -= curr
            else:
                # Иначе добавляем
                total += curr
            prev = curr  # Обновляем предыдущий символ

        return total


if __name__ == "__main__":
    solution = Solution()
    print(solution.romanToInt("III"))     # 3
    print(solution.romanToInt("LVIII"))   # 58
    print(solution.romanToInt("MCMXCIV")) # 1994
